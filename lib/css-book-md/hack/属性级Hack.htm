### 语法

**selector**{&lt;hack&gt;?property:value&lt;hack&gt;?;}

## 取值：

- _：选择IE6及以下。连接线（中划线）（-）亦可使用，为了避免与某些带中划线的属性混淆，所以使用下划线（_）更为合适。
- *：选择IE7及以下。诸如：（+）与（#）之类的均可使用，不过业界对（*）的认知度更高
- \9：选择IE6+
- \0：选择IE8+和Opera15以下的浏览器

### 说明

选择不同的浏览器及版本

- 尽可能减少对CSS Hack的使用。Hack有风险，使用需谨慎
- 通常如未作特别说明，本文档所有的代码和示例的默认运行环境都为标准模式。
- 一些CSS Hack由于浏览器存在交叉认识，所以需要通过层层覆盖的方式来实现对不同浏览器进行Hack的。
	- 如想同一段文字在IE6,7,8显示为不同颜色
		```css
		.test {
		color: #090\9; /* For IE8+ */
		*color: #f00;  /* For IE7 and earlier */
		_color: #ff0;  /* For IE6 and earlier */
		}
		```

	- 若在怪异模式下运行，这些Hack将会被不同版本的IE相互识别，导致失效

* 这里只列举一些使用比率较高的常用CSS Hack，且不考虑IE6以下的版本。若对其它更多Hack有兴趣，可Google或Baidu。
* CSS Hack一般都是利用各浏览器的支持CSS的能力和BUG来进行的。所以对浏览器的选择大致可以分为能力选择和怪癖选择(BUG)。能力通常是指浏览器对CSS特性的支持程度，而怪癖是指浏览器特有的一些BUG。
* 友情提示：尽量找到通用方法而减少对CSS Hack的使用，大规模使用CSS Hack会带来维护成本的提高以及浏览器版本变化而带来类似Hack失效等系列问题。